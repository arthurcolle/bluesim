<!DOCTYPE html>
<meta charset="utf-8">
<style> /* set the CSS */

body { font: 12px Arial;}

path { 
    stroke: steelblue;
    stroke-width: 2;
    fill: none;
}

.axis path,
.axis line {
    fill: none;
    stroke: grey;
    stroke-width: 1;
    shape-rendering: crispEdges;
}

</style>
<body>

<!-- load the d3.js library -->    
<script src="http://d3js.org/d3.v3.min.js"></script>

<script>

// Set the dimensions of the canvas / graph
var margin = {top: 30, right: 20, bottom: 30, left: 50},
    width = 600 - margin.left - margin.right,
    height = 270 - margin.top - margin.bottom;

// Parse the date / time
var parseDate = d3.time.format("%d-%b-%y").parse;

// Set the ranges
var x = d3.time.scale().range([0, width]);
var y = d3.scale.linear().range([height, 0]);

// Define the axes
var xAxis = d3.svg.axis().scale(x)
    .orient("bottom").ticks(5);

var yAxis = d3.svg.axis().scale(y)
    .orient("left").ticks(5);

// Define the line
var valueline = d3.svg.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.close); });
    
// Adds the svg canvas
var svg = d3.select("body")
    .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
    .append("g")
        .attr("transform", 
              "translate(" + margin.left + "," + margin.top + ")");

// Get the data
d3.csv("data.tsv", function(error, data) {
    data.forEach(function(d) {
        d.date = parseDate(d.date);
        d.close = +d.close;
    });

    // Scale the range of the data
    x.domain(d3.extent(data, function(d) { return d.date; }));
    y.domain([0, d3.max(data, function(d) { return d.close; })]);

    // Add the valueline path.
    svg.append("path")
        .attr("class", "line")
        .attr("d", valueline(data));

    // Add the X Axis
    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);

    // Add the Y Axis
    svg.append("g")
        .attr("class", "y axis")
        .call(yAxis);

});

</script>
</body>









<!-- <!DOCTYPE html>
<html>
<head>
    <title>Table to D3</title>
</head>
<body>
    <script src="http://d3js.org/d3.v3.min.js"></script>

    <table id="DATA">
        <tr>
            <th>1</th>
            <th>2</th>
            <th>3</th>
        </tr>
        <tr>
            <td>1</td>
            <td>5</td>
            <td>3</td>
        </tr>
        <tr>
            <td>2</td>
            <td>3</td>
            <td>7</td>
        </tr>
        <tr>
            <td>7</td>
            <td>11</td>
            <td>15</td>
        </tr>
    </table>


    <script type="text/javascript">

        var table = document.getElementById("DATA");
        var color_array = [];
        var dataset2 = [];
        var dataset = [];


    var w = 300;
    var h = 150;

    var rand_color = function() {
        
    }

var svg = d3.select("body").append("svg")
    .attr("width", w)
    .attr("height", h);


        for (var i = 0, row; row = table.rows[i]; i++) {
           color_array[i] = '#' + (function co(lor){   return (lor += [0,1,2,3,4,5,6,7,8,9,'a','b','c','d','e','f'][Math.floor(Math.random()*16)]) && (lor.length == 6) ?  lor : co(lor); })('');
           for (var j = 0, col; col = row.cells[j]; j++) {
                    svg.append("circle")
                    .attr("cy", i)
                    .attr("cx", parseInt(row.cells[j].innerText))
                    .attr("r", 1).style("fill", color_array[i]);
           }  
        }




    </script>


</body>
</html> -->