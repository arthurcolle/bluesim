
function setUDO(){

    // this is where you can modify the dialog box of UDO
    console.log("setUDO");
    var b = $("#udo_form");
    b.show().position({
        of: $("#config_sim"),
        at: "left bottom",
        my: "left top"
    })

    

	//alert("you clicked edit udo");
	
	//Push the fields that the user enteres in the forms as a tuple of the form
	//(field name, field type)
	// for all the fields entered
	//LIST__OF_PARAMETERS.push()

    //This function resets every source form.  Can probably find a way not to call this unless
    // user has updated the UDO in any way...
    // will need a way to save state and show state like the entities (probably just copy their code
    // and implement it here)...
	// clearAndUpdateForm();
	

	// get name that user entered from form
	//var udoName = document.getElementById("udo_form_name");
	
	//assign name that user entered in form
	//NAME_OF_OBJECT;

	//list name that user entered from form
	//var udoNameDisplay = document.getElementById("udo_name").innerHTML = NAME_OF_OBJECT;

	// var myWindow = window.open("", "", "width=200, height=100");

	// window.onload = RecreateDynamicTextboxes;
}

//function popForm(){

  //   var parentForm = document.getElementById("udo_form_to_append");
    // var div = document.createElement('div');
     //div.innerHTML = GetDynamicTextBox("");
//}
	

//setUDO.prototype.showSettings = function() {
  //  var a = $("#udo_form");
    //QueueApp.form_view = this.view;
    //a.show().position({
      //  of: $(this.view.image.node),
        //at: "center center",
        //my: "left top"
    //})
//};
